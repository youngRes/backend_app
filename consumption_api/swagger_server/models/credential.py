# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Credential(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, filters: List[str]=None, groups: List[str]=None, password: str=None, role: str=None):  # noqa: E501
        """Credentials - a model defined in Swagger

        :param chapter_code: The chapter_code of this Chapter.  # noqa: E501
        :type chapter_code: str
        :param chapter_description: The chapter_description of this Chapter.  # noqa: E501
        :type chapter_description: str
        :param highlights: The highlights of this Chapter.  # noqa: E501
        :type highlights: List[str]
        :param snapshot: The snapshot of this Chapter.  # noqa: E501
        :type snapshot: str
        """
        self.swagger_types = {
            'filters': List[str],
            'groups': List[str],
            'password': str,
            'role': str
        }

        self.attribute_map = {
            'filters': 'filters',
            'groups': 'groups',
            'password': 'password',
            'role': 'role'
        }
        self._filters = filters
        self._groups = groups
        self._password = password
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'Credential':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Credential of this Credential.  # noqa: E501
        :rtype: Credential
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self) -> List[str]:
        """Gets the chapter_code of this Credential.

        code that identifies a chapter inside a video game.  # noqa: E501

        :return: The chapter_code of this Credential.
        :rtype: List[str]
        """
        return self._filters

    @filters.setter
    def filters(self, filters: List[str]):
        """Sets the chapter_code of this Credential.

        code that identifies a Credential inside a video game.  # noqa: E501

        :param chapter_code: The chapter_code of this Credential.
        :type chapter_code: List[str]
        """

        self._filters = filters

    @property
    def groups(self) -> List[str]:
        """Gets the chapter_description of this Credential.

        short description of a Credential.  # noqa: E501

        :return: The chapter_description of this Credential.
        :rtype: List[str]
        """
        return self._groups

    @groups.setter
    def groups(self, groups: List[str]):
        """Sets the chapter_description of this Credential.

        short description of a chapter.  # noqa: E501

        :param chapter_description: The chapter_description of this Credential.
        :type chapter_description: List[str]
        """

        self._groups = groups

    @property
    def password(self) -> str:
        """Gets the highlights of this Credential.

        Tips for the teachers to understand what the results obtained can means  # noqa: E501

        :return: The highlights of this Credential.
        :rtype: List[str]
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the highlights of this Credential.

        Tips for the teachers to understand what the results obtained can means  # noqa: E501

        :param highlights: The highlights of this Credential.
        :type highlights: List[str]
        """

        self._password = password

    @property
    def role(self) -> str:
        """Gets the role of this Credential.

        url where the picture of the role of the cahpter is stored  # noqa: E501

        :return: The role of this Credential.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this Credential.

        url where the picture of the role of the cahpter is stored  # noqa: E501

        :param role: The role of this Credential.
        :type role: str
        """

        self._role = role
