# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Student(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, student_code: str=None, sex: str=None, age: str=None, country: str=None, city: str=None, group_code: str=None):  # noqa: E501
        """Student - a model defined in Swagger

        :param student_code: The student_code of this Student.  # noqa: E501
        :type student_code: str
        :param sex: The sex of this Student.  # noqa: E501
        :type sex: str
        :param age: The age of this Student.  # noqa: E501
        :type age: str
        :param country: The country of this Student.  # noqa: E501
        :type country: str
        :param city: The city of this Student.  # noqa: E501
        :type city: str
        """
        self.swagger_types = {
            'student_code': str,
            'sex': str,
            'age': str,
            'country': str,
            'city': str,
            'group_code': str
        }

        self.attribute_map = {
            'student_code': 'student_code',
            'sex': 'sex',
            'age': 'age',
            'country': 'country',
            'city': 'city',
            'group_code': 'group_code'
        }
        self._student_code = student_code
        self._sex = sex
        self._age = age
        self._country = country
        self._city = city
        self._group_code = group_code

    @classmethod
    def from_dict(cls, dikt) -> 'Student':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Student of this Student.  # noqa: E501
        :rtype: Student
        """
        return util.deserialize_model(dikt, cls)

    @property
    def student_code(self) -> str:
        """Gets the student_code of this Student.

        Code that indentifies a student  # noqa: E501

        :return: The student_code of this Student.
        :rtype: str
        """
        return self._student_code

    @student_code.setter
    def student_code(self, student_code: str):
        """Sets the student_code of this Student.

        Code that indentifies a student  # noqa: E501

        :param student_code: The student_code of this Student.
        :type student_code: str
        """

        self._student_code = student_code

    @property
    def sex(self) -> str:
        """Gets the sex of this Student.

        male or female  # noqa: E501

        :return: The sex of this Student.
        :rtype: str
        """
        return self._sex

    @sex.setter
    def sex(self, sex: str):
        """Sets the sex of this Student.

        male or female  # noqa: E501

        :param sex: The sex of this Student.
        :type sex: str
        """

        self._sex = sex

    @property
    def age(self) -> str:
        """Gets the age of this Student.

        age of a student  # noqa: E501

        :return: The age of this Student.
        :rtype: str
        """
        return self._age

    @age.setter
    def age(self, age: str):
        """Sets the age of this Student.

        age of a student  # noqa: E501

        :param age: The age of this Student.
        :type age: str
        """

        self._age = age

    @property
    def country(self) -> str:
        """Gets the country of this Student.

        country where the student is from  # noqa: E501

        :return: The country of this Student.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this Student.

        country where the student is from  # noqa: E501

        :param country: The country of this Student.
        :type country: str
        """

        self._country = country

    @property
    def city(self) -> str:
        """Gets the city of this Student.

        city where the student is from  # noqa: E501

        :return: The city of this Student.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this Student.

        city where the student is from  # noqa: E501

        :param city: The city of this Student.
        :type city: str
        """

        self._city = city

    @property
    def group_code(self) -> str:
        """Gets the group_code of this Student.

        Code that identifies a student's group  # noqa: E501

        :return: The group_code of this Student.
        :rtype: str
        """
        return self._group_code

    @group_code.setter
    def group_code(self, group_code: str):
        """Sets the student_code of this Student.

        Code that identifies a student's group  # noqa: E501

        :param group_code: The group_code of this Student.
        :type group_code: str
        """

        self._group_code = group_code
