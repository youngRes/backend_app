# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.event import Event  # noqa: F401,E501
from swagger_server import util


class InlineResponse2003(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, count: int=None, events: List[Event]=None):  # noqa: E501
        """InlineResponse2003 - a model defined in Swagger

        :param count: The count of this InlineResponse2003.  # noqa: E501
        :type count: int
        :param events: The events of this InlineResponse2003.  # noqa: E501
        :type events: List[Event]
        """
        self.swagger_types = {
            'count': int,
            'events': List[Event]
        }

        self.attribute_map = {
            'count': 'count',
            'events': 'events'
        }
        self._count = count
        self._events = events

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2003':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_3 of this InlineResponse2003.  # noqa: E501
        :rtype: InlineResponse2003
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self) -> int:
        """Gets the count of this InlineResponse2003.


        :return: The count of this InlineResponse2003.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this InlineResponse2003.


        :param count: The count of this InlineResponse2003.
        :type count: int
        """

        self._count = count

    @property
    def events(self) -> List[Event]:
        """Gets the events of this InlineResponse2003.


        :return: The events of this InlineResponse2003.
        :rtype: List[Event]
        """
        return self._events

    @events.setter
    def events(self, events: List[Event]):
        """Sets the events of this InlineResponse2003.


        :param events: The events of this InlineResponse2003.
        :type events: List[Event]
        """

        self._events = events
